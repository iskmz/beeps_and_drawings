import sys
import winsound
import time

helpStr="\n a demonstration of several beeps/melodies using windows-beep "
helpStr+="\n\n command:\t beepbeep [# of item to play]\n\n"
helpStr+=" items:"

a = sys.argv

def main():
    if len(a)<2 or a[1]=="?" or a[1]=="help":
        print(helpStr)
        for i in range(0,len(lst)):
            print("\t\t",i+1,".  ",lst[i][0])
    else:
        if not isIntInRange(a[1]):
            print("INPUT ERROR!")
            exit()
        item = int(a[1])
        # choose item #
        print(lst[item-1][0])
        lst[item-1][1]()


####################################################
    
def isIntInRange(value):
    try:
        return int(value)>0 and int(value)<=len(lst)
    except ValueError:
        return False

def bp(frequency,duration):  # to shorten name
    winsound.Beep(frequency,duration) # duration: milliseconds

def delay(seconds):
    time.sleep(seconds)  # duration: seconds

# freq: in Hz (40 to 37000)
# duration & delayTime in seconds
def BeepDelay(freq,duration,delayTime):
    bp(freq,duration*1000)
    delay(delayTime)

# freq: in Hz (40 to 37000)
# duration & delayTime in MILLI-SECONDS
def BeepDelayMilli(freq,duration,delayTime):
    bp(freq,duration)
    delay(delayTime/1000)


####################################################

# 1
def monotone_up():
   for i in range(100,2100,100):
       bp(i,250)

# 2
def monotone_down():
   for i in range(2100,0,-100):
       bp(i,250)
# 3    
def up_down():
    for j in range(3):
        for i in range(100,1600,100):
            bp(i,250)
        for i in range(1600,0,-100):
            bp(i,250)

# 4
lst_mario = [(660,100,150),(660,100,300),(660,100,300),(510,100,100),(660,100,300),(770,100,550),(380,100,575),(510,100,450),(380,100,400),(320,100,500),(440,100,300),(480,80,330),(450,100,150),(430,100,300),(380,100,200),(660,80,200),(760,50,150),(860,100,300),(700,80,150),(760,50,350),(660,80,300),(520,80,150),(580,80,150),(480,80,500),(510,100,450),(380,100,400),(320,100,500),(440,100,300),(480,80,330),(450,100,150),(430,100,300),(380,100,200),(660,80,200),(760,50,150),(860,100,300),(700,80,150),(760,50,350),(660,80,300),(520,80,150),(580,80,150),(480,80,500),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,150,300),(380,100,150),(430,100,150),(500,100,300),(430,100,150),(500,100,100),(570,100,220),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,200,300),(1020,80,300),(1020,80,150),(1020,80,300),(380,100,300),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,150,300),(380,100,150),(430,100,150),(500,100,300),(430,100,150),(500,100,100),(570,100,420),(585,100,450),(550,100,420),(500,100,360),(380,100,300),(500,100,300),(500,100,150),(500,100,300),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,150,300),(380,100,150),(430,100,150),(500,100,300),(430,100,150),(500,100,100),(570,100,220),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,200,300),(1020,80,300),(1020,80,150),(1020,80,300),(380,100,300),(500,100,300),(760,100,100),(720,100,150),(680,100,150),(620,150,300),(650,150,300),(380,100,150),(430,100,150),(500,100,300),(430,100,150),(500,100,100),(570,100,420),(585,100,450),(550,100,420),(500,100,360),(380,100,300),(500,100,300),(500,100,150),(500,100,300),(500,60,150),(500,80,300),(500,60,350),(500,80,150),(580,80,350),(660,80,150),(500,80,300),(430,80,150),(380,80,600),(500,60,150),(500,80,300),(500,60,350),(500,80,150),(580,80,150),(660,80,550),(870,80,325),(760,80,600),(500,60,150),(500,80,300),(500,60,350),(500,80,150),(580,80,350),(660,80,150),(500,80,300),(430,80,150),(380,80,600),(660,100,150),(660,100,300),(660,100,300),(510,100,100),(660,100,300),(770,100,550),(380,100,575)]
def mario():
    for item in lst_mario:
        BeepDelayMilli(int(item[0]*2.2),item[1],item[2])

# 5
lst_FurElise = [(420,40,120),(400,40,120),(420,40,120),(400,40,120),(420,40,120),(405,40,120),(370,40,120),(335,40,120),(282,120,40),(180,40,120),(215,40,120),(282,40,120),(405,120,40),(213,40,120),(262,40,120),(405,40,120),(335,120,40),(213,40,120),(420,40,120),(400,40,120),(420,40,120),(400,40,120),(420,40,120),(405,40,120),(370,40,120),(335,40,120),(282,120,40),(180,40,120),(215,40,120),(282,40,120),(405,120,40),(213,40,120),(330,40,120),(405,40,120),(282,120,40)]
def FurElise():
    for item in lst_FurElise:
        BeepDelayMilli(item[0]*3,item[1]*3,item[2]*3)

    
####################################################

## main list which maps items to their functions ##
        
lst = [
       ["monotone ascending",monotone_up],      # 1 
       ["monotone descending",monotone_down],   # 2
       ["up and down (x3)",up_down],            # 3
       ["super mario (long)",mario],            # 4
       ["Fur Elise",FurElise]                   # 5
       ]

####################################################

if __name__=="__main__": 
    main()



#################################################################
# this is version 2.0 of beepnotes
# improved code, more standardized functions to play melodies #
# a standard DATA STRUCTURE for all melodies data ! ###########
# much less repetitions ! # more efficient, cleaner code #
# just compose the melody, set the durations and play it #
#################################################################

import sys
from beeply import notes
import winsound  # for special notes, undefined in beeply #

helpStr="\n a demonstration of several melodies using 'beeply' module"
helpStr+="\n\n command:\t beepnotes [# of item to play]\n\n"
helpStr+=" items:"

a = sys.argv

def main():
    if len(a)<2 or a[1]=="?" or a[1]=="help":
        print(helpStr)
        for i in range(0,len(lst)):
            print("\t\t",i+1,".  ",lst[i][0])
    else:
        if not isIntInRange(a[1]):
            print("INPUT ERROR!")
            exit()
        item = int(a[1])
        # choose item #
        print(lst[item-1][0])
        play(lst[item-1][1])


####################################################
    
def isIntInRange(value):
    try:
        return int(value)>0 and int(value)<=len(lst)
    except ValueError:
        return False

def play(melodyDict):
    # de-construct dictionary objects
    melody = melodyDict["melody"]
    durations = melodyDict["durations"]
    sleepFactor = melodyDict["sleepFactor"]
    # init beeply object
    playBeep = notes.beeps()
    # play it 
    for line in melody:
        for note in line:
            n = note[0]
            t = note[1]
            if isSpecial(n):
                playSpecial(n,durations[t-1])
            else:
                playBeep.hear(n,durations[t-1])
        notes.sleep(sleepFactor)



def isSpecial(note):
    return ("#" in note) or (note.lower() == note)

def playSpecial(note,duration):
    t = notes.beeps
    special_notes = {
        "C#": (t.C+t.D)//2,
        "D#": (t.D+t.E)//2,
        "F#": (t.F+t.G)//2,
        "G#": (t.G+t.A)//2,
        "A#": (t.A+t.B)//2,
        "C#_":(t.C_+t.D_)//2,
        "D#_":(t.D_+t.E_)//2,
        "F#_":(t.F_+t.G_)//2,
        "G#_":(t.G_+t.A_)//2,
        "A#_":(t.A_+t.B_)//2,
        "b":(t.B+t.C) // 2
        }
    winsound.Beep(special_notes[note],duration)

########################################################

########################################################
# dictionaries, representing melody data needed to play
# each melody, including notes,tempo,durations ..etc
########################################################


# 1
mary = {
    "melody":[
        [('E',1),('D',1),('C',1),('D',1),('E',1),('E',1),('E',1)],
        [('D',1),('D',1),('D',1),('E',1),('E',1),('E',1)],
        [('E',1),('D',1),('C',1),('D',1),('E',1),('E',1),('E',1)],
        [('E',1),('D',1),('D',1),('E',1),('D',1),('C',1)]
        ],
    "durations":[500],
    "sleepFactor":0.75
    }

# 2
twinkle = {
    "melody":[
        [("G",1),("G",1),("D",1),("D",1),("E",1),("E",1),("D",2),
         ("C",1),("C",1),("B",1),("B",1),("A",1),("A",1),("G",2)],
        [("D",1),("D",1),("C",1),("C",1),("B",1),("B",1),("A",2),
         ("D",1),("D",1),("C",1),("C",1),("B",1),("B",1),("A",2)],
        [("G",1),("G",1),("D",1),("D",1),("E",1),("E",1),("D",2),
         ("C",1),("C",1),("B",1),("B",1),("A",1),("A",1),("G",2)]
        ],
    "durations":[400,1000],
    "sleepFactor":0.5
    }
    
# 3    
baby = {
    "melody":[
        [("E",1),("G",1),("E_",1),("D_",2),("C_",1),("E",1),("G",1),("C_",1),("B",2),
         ("F",1),("G",1),("F_",1),("E_",2),("D_",1),("D_",1),("C_",1),("A",1),("G",2)],
        [("E",1),("G",1),("E_",1),("D_",2),("C_",1),("E",1),("G",1),("C_",1),("B",2),
         ("A",1),("G",1),("C_",1),("F_",1),("E_",2),("C_",1),("D_",1),("A",1),("B",1),("C_",2)]
        ],
    "durations":[750,2000],
    "sleepFactor":1.25
    }

# 4
birthday = {
    "melody":[
        [("C",1),("C",1),("D",2),("C",2),("F",2),("E",3)],
        [("C",1),("C",1),("D",2),("C",2),("G",2),("F",3)],
        [("C",1),("C",1),("C",2),("A",2),("F",2),("E",2),("D",2)],
        [("b",1),("b",1),("A",2),("F",2),("G",2),("F",3)]
        ],
    "durations":[400,800,1200],
    "sleepFactor":0.5
    }

# 5
happy = {
    "melody":[
        [("G",1),("G",1),("C_",1),("C_",1),("C_",1),("C_",1),("C_",1),
         ("C_",1),("B",1),("C_",1),("D_",2)],
        [("G",1),("G",1),("D_",1),("D_",1),("D_",1),("D_",1),("D_",1),
         ("D_",1),("C_",1),("D_",1),("E_",2)],
        [("E_",1),("E_",1),("F_",1),("F_",1),("F_",1),("F_",1),("A",1),("A",1),("F_",1),
         ("F_",1),("E_",1),("E_",1),("E_",1),("D_",1),("C_",1),("C_",1),("E_",1),("E_",1),
         ("D_",1),("D_",1),("D_",1),("C_",1),("B",1),("B",1),("A",1),("B",1),("C_",2)]
        ],
    "durations":[400,1200],
    "sleepFactor":0.5
    }

# 6
christmas = {
    "melody":[
        [("G",1),("C_",1),("C_",1),("D_",1),("C_",1),("B",1),("A",1),("A",1),("A",1),("D_",1),
         ("D_",1),("E_",1),("D_",1),("C_",1),("B",1),("G",1),("G",1),("E_",1),("E_",1),("F_",1),
         ("E_",1),("D_",1),("C_",1),("A",1),("G",1),("G",1),("A",1),("D_",1),("B",1),("C_",2)],
        [("G",1),("C_",1),("C_",1),("C_",1),("B",2),("B",1),("C_",1),("B",1),("A",1),("G",2)],
        [("D_",1),("E_",1),("D_",1),("C_",1),("G_",1),("G",1),("G",1),("G",1),("A",1),("D_",1),
         ("B",1),("C_",2)],
        [("G",1),("C_",1),("C_",1),("D_",1),("C_",1),("B",1),("A",1),("A",1),("A",1),("D_",1),
         ("D_",1),("E_",1),("D_",1),("C_",1),("B",1),("G",1),("G",1),("E_",1),("E_",1),("F_",1),
         ("E_",1),("D_",1),("C_",1),("A",1),("G",1),("G",1),("A",1),("D_",1),("B",1),("C_",2)]
        ],
    "durations":[400,1200],
    "sleepFactor":0.5
    }

# 7
joy = {
    "melody":[
        [("E_",2),("E_",2),("F_",2),("G_",2),("G_",2),("F_",2),("E_",2),("D_",2),
         ("C_",2),("C_",2),("D_",2),("E_",2),("E_",2),("D_",1),("D_",2)],
        [("E_",2),("E_",2),("F_",2),("G_",2),("G_",2),("F_",2),("E_",2),("D_",2),
         ("C_",2),("C_",2),("E_",2),("E_",2),("D_",2),("C_",1),("C_",2)],
        [("D_",2),("D_",2),("E_",2),("C_",2),("D_",2),("E_",1),("F_",1),
         ("E_",2),("C_",2),("D_",2),("E_",1),("F_",1),("E_",2),("D_",2),("C_",2),
         ("D_",2),("G",2)],
        [("E_",2),("E_",2),("F_",2),("G_",2),("G_",2),("F_",2),("E_",2),("D_",2),
         ("C_",2),("C_",2),("D_",2),("E_",2),("D_",2),("C_",1),("C_",2)]
        ],
    "durations":[250,750],
    "sleepFactor":0.5
    }

# 8
grace = {
    "melody":[
        [("G",2),("C_",3),("E_",1),("C_",1),("E_",3),("D_",2),("C_",3),("A",2),("G",3)],
        [("G",2),("C_",3),("E_",1),("C_",1),("E_",3),("D_",2),("G_",4)],
        [("E_",2),("G_",3),("E_",1),("C_",1),("E_",3),("D_",2),("C_",3),("A",2),("G",3)],
        [("G",2),("C_",3),("E_",1),("C_",1),("E_",3),("D_",2),("C_",4)]
        ],
    "durations":[250,500,1000,1500],
    "sleepFactor":0.5
    }

# 9
auld_lang_syne = {
    "melody":[
        [("G",2),("C_",3),("B",1),("C_",2),("E_",2),("D_",3),("C#_",2),
         ("D_",2),("E_",2),("C_",2),("C_",1),("E_",2),("G_",2),("A_",4)],
        [("A_",2),("G_",3),("E_",1),("E_",2),("C_",2),("D_",3),("C#_",2),
         ("D_",2),("E_",1),("D_",1),("C_",2),("A",1),("A",2),("G",2),("C_",4)],
        [("A_",2),("G_",3),("E_",1),("E_",2),("C_",2),("D_",3),("C#_",1),
         ("D_",2),("A_",2),("G_",3),("E_",1),("E_",2),("G_",2),("A_",4)],
        [("A_",2),("G_",3),("E_",1),("E_",2),("C_",2),("D_",3),("C#_",1),
         ("D_",2),("E_",1),("D_",1),("C_",3),("A",1),("A",2),("G",2),("C_",4)]
        ],
    "durations":[250,500,1000,1500],
    "sleepFactor":0.5
    }
        
# 10
imperial = {
    "melody":[
        [("E",3),("E",3),("E",3),("C",2),("G",1),("E",3),("C",2),("G",1),("E",4)],
        [("B",3),("B",3),("B",3),("C_",2),("G",1),("D#",3), ("C",2),("G",1),("E",4)],
        [("E_",3),("E",2),("E",1),("E_",3),("D#_",2),("D_",1),("C#_",1),("C_",1),("C#_",2)],
        [("F",1),("A#",3),("A",2),("G#",1),("G",1),("F#",1),("G",2)],
        [("C",1),("D#",3),("C",2),("E",1),("G",3),("E",2),("G",1),("B",4)],
        [("E_",3),("E",2),("E",1),("E_",3),("D#_",2),("D_",1),("C#_",1),("C_",1),("C#_",2)],
        [("F",1),("A#",3),("A",2),("G#",1),("G",1),("F#",1),("G",2)],
        [("C",1),("D#",3),("C",2),("G",1),("E",3),("C",2),("G",1),("E",4)]
        ],
    "durations":[250,500,750,1000],
    "sleepFactor":0.5
    }

# 11
godfather = {
    "melody":[
        [("E_",1),("A_",1),("C_",1),("B_",1),("A_",1),("C_",1),("A_",1),
         ("B_",1),("A_",1),("F_",1),("G_",1),("E_",2)],
        [("E_",1),("A_",1),("C_",1),("B_",1),("A_",1),("C_",1),("A_",1),
         ("B_",1),("A_",1),("E_",1),("D#_",1),("D_",2)],
        [("D_",1),("F_",1),("G#_",1),("B_",2)],
        [("D_",1),("F_",1),("G#_",1),("A_",2)],
        [("A",1),("C",1),("G_",1),("F_",1),("E_",1),("G_",1),("F_",1),
         ("F_",1),("E_",1),("E_",1),("G#",1),("A",2)],
        [("A_",1),("A_",1),("G#_",1),("G_",2),("B_",1),("A_",1),("F_",1),("E_",2)],
        [("E_",1),("G_",1),("E_",1),("D_",2),("D_",1),("F_",1),("D#_",1),("E_",2)],
        [("E_",1),("A_",1),("C_",1),("B_",1),("A_",1),("C_",1),("A_",1),
         ("B_",1),("A_",1),("F_",1),("G_",1),("E_",2)],
        [("E_",1),("A_",1),("C_",1),("B_",1),("A_",1),("C_",1),("A_",1),
         ("B_",1),("A_",1),("E_",1),("D#_",1),("D_",2)],
        [("D_",1),("F_",1),("G#_",1),("B_",2)],
        [("D_",1),("F_",1),("G#_",1),("A_",2)],
        [("A",1),("C",1),("G_",1),("F_",1),("E_",1),("G_",1),("F_",1),
         ("F_",1),("E_",1),("E_",1),("G#",1),("A",2)]
        ],
    "durations":[400,1000],
    "sleepFactor":0.5
    }

########################################################################

## main item-list which maps titles to their dictionaries ##
        
lst = [
       ["Mary Had A Little Lamb",mary],                   # 1
       ["Twinkle Twinkle Little Star",twinkle],           # 2
       ["Rock-a-Bye Baby",baby],                          # 3
       ["Happy Birthday to You",birthday],                # 4
       ["If You're Happy and You Know It",happy],         # 5
       ["We Wish You A Merry Christmas",christmas],       # 6
       ["Ode to Joy",joy],                                # 7
       ["Amazing Grace",grace],                           # 8
       ["Auld Lang Syne (New Year's Eve)",auld_lang_syne],# 9
       ["Imperial March",imperial],                       #10
       ["The Godfather Theme",godfather]                  #11
       ]

########################################################################

if __name__=="__main__": 
    main()


